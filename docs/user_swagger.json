{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Учебный стенд для QA по Kafka: отправка событий продюсером, обработка 3 консьюмерами, запись в Postgres, проверка сценариев (порядок, дубликаты, DLQ, лаги).",
    "title": "QA Kafka Lab — HR Profiles Trainer",
    "contact": {},
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/license/mit"
    },
    "version": "1.0"
  },
  "basePath": "/",
  "paths": {
    "/dlq": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Producer"
        ],
        "summary": "Сообщения DLQ",
        "parameters": [
          {
            "type": "integer",
            "default": 50,
            "description": "Лимит",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Смещение",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.listResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.errorResponse"
            }
          }
        }
      }
    },
    "/events": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Producer"
        ],
        "summary": "Сырые события (эмуляция kafka_events)",
        "parameters": [
          {
            "type": "integer",
            "default": 50,
            "description": "Лимит",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Смещение",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.listResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.errorResponse"
            }
          }
        }
      }
    },
    "/history": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "CRUD-History"
        ],
        "summary": "Добавить запись в историю работы",
        "parameters": [
          {
            "description": "История",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.createHistoryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.okResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.errorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.errorResponse"
            }
          }
        }
      }
    },
    "/history/{employee_id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "CRUD-History"
        ],
        "summary": "История работы сотрудника",
        "parameters": [
          {
            "type": "string",
            "description": "Идентификатор сотрудника",
            "name": "employee_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "default": 50,
            "description": "Лимит",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Смещение",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.listResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.errorResponse"
            }
          }
        }
      }
    },
    "/history/{id}": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "CRUD-History"
        ],
        "summary": "Обновить запись истории",
        "parameters": [
          {
            "type": "integer",
            "description": "ID записи истории",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Изменяемые поля",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.updateHistoryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.okResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.errorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.errorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.errorResponse"
            }
          }
        }
      },
      "delete": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "CRUD-History"
        ],
        "summary": "Удалить запись истории",
        "parameters": [
          {
            "type": "integer",
            "description": "ID записи истории",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.okResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.errorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.errorResponse"
            }
          }
        }
      }
    },
    "/producer/history": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Producer"
        ],
        "summary": "Публикация события в hr.history",
        "parameters": [
          {
            "description": "payload",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.historyProduceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.okResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.errorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.errorResponse"
            }
          },
          "501": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/api.errorResponse"
            }
          }
        }
      }
    },
    "/producer/personal": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Producer"
        ],
        "summary": "Публикация события в hr.personal",
        "parameters": [
          {
            "description": "payload",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.personalProduceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.okResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.errorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.errorResponse"
            }
          },
          "501": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/api.errorResponse"
            }
          }
        }
      }
    },
    "/producer/position": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Producer"
        ],
        "summary": "Публикация события в hr.positions",
        "parameters": [
          {
            "description": "payload",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.positionProduceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.okResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.errorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.errorResponse"
            }
          },
          "501": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/api.errorResponse"
            }
          }
        }
      }
    },
    "/profiles": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "CRUD-Profiles"
        ],
        "summary": "Список профилей сотрудников",
        "parameters": [
          {
            "type": "integer",
            "default": 50,
            "description": "Лимит",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Смещение",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.listResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.errorResponse"
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "CRUD-Profiles"
        ],
        "summary": "Создать профиль",
        "parameters": [
          {
            "description": "Профиль",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.createProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.okResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.errorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.errorResponse"
            }
          }
        }
      }
    },
    "/profiles/{employee_id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "CRUD-Profiles"
        ],
        "summary": "Получить профиль по employee_id",
        "parameters": [
          {
            "type": "string",
            "description": "Идентификатор сотрудника",
            "name": "employee_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.objectResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.errorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.errorResponse"
            }
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "CRUD-Profiles"
        ],
        "summary": "Обновить профиль",
        "parameters": [
          {
            "type": "string",
            "description": "Идентификатор сотрудника",
            "name": "employee_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Изменяемые поля",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.updateProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.okResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.errorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.errorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.errorResponse"
            }
          }
        }
      },
      "delete": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "CRUD-Profiles"
        ],
        "summary": "Удалить профиль",
        "parameters": [
          {
            "type": "string",
            "description": "Идентификатор сотрудника",
            "name": "employee_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.okResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.errorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.errorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "api.createHistoryRequest": {
      "type": "object",
      "properties": {
        "company": {
          "type": "string",
          "example": "Acme Corp"
        },
        "employee_id": {
          "type": "string",
          "example": "e-1024"
        },
        "period_from": {
          "type": "string",
          "example": "2022-07-01"
        },
        "period_to": {
          "type": "string",
          "example": "2025-09-30"
        },
        "position": {
          "type": "string",
          "example": "QA"
        },
        "stack": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "Python",
            "Pytest"
          ]
        }
      }
    },
    "api.createProfileRequest": {
      "type": "object",
      "properties": {
        "birth_date": {
          "type": "string",
          "example": "1994-06-12"
        },
        "department": {
          "type": "string",
          "example": "Quality Assurance"
        },
        "effective_from": {
          "type": "string",
          "example": "2025-10-01"
        },
        "email": {
          "type": "string",
          "example": "anna@example.com"
        },
        "employee_id": {
          "type": "string",
          "example": "e-1024"
        },
        "first_name": {
          "type": "string",
          "example": "Anna"
        },
        "grade": {
          "type": "string",
          "example": "Middle"
        },
        "last_name": {
          "type": "string",
          "example": "Ivanova"
        },
        "phone": {
          "type": "string",
          "example": "+33-123-45-67"
        },
        "title": {
          "type": "string",
          "example": "QA Engineer"
        }
      }
    },
    "api.errorResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "example": "invalid_json"
        },
        "message": {
          "type": "string",
          "example": "Некорректный JSON"
        },
        "status": {
          "type": "string",
          "example": "error"
        }
      }
    },
    "api.historyProduceRequest": {
      "type": "object",
      "properties": {
        "company": {
          "type": "string"
        },
        "employee_id": {
          "type": "string"
        },
        "message_id": {
          "type": "string"
        },
        "period_from": {
          "type": "string"
        },
        "period_to": {
          "type": "string"
        },
        "position": {
          "type": "string"
        },
        "stack": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "api.listResponse": {
      "type": "object",
      "properties": {
        "items": {},
        "limit": {
          "type": "integer"
        },
        "offset": {
          "type": "integer"
        }
      }
    },
    "api.objectResponse": {
      "type": "object",
      "properties": {
        "data": {}
      }
    },
    "api.okResponse": {
      "type": "object",
      "properties": {
        "msg": {
          "type": "string",
          "example": "Готово"
        },
        "status": {
          "type": "string",
          "example": "ok"
        }
      }
    },
    "api.personalProduceRequest": {
      "type": "object",
      "properties": {
        "birth_date": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "employee_id": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "message_id": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        }
      }
    },
    "api.positionProduceRequest": {
      "type": "object",
      "properties": {
        "department": {
          "type": "string"
        },
        "effective_from": {
          "type": "string"
        },
        "employee_id": {
          "type": "string"
        },
        "grade": {
          "type": "string"
        },
        "message_id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "api.updateHistoryRequest": {
      "type": "object",
      "properties": {
        "company": {
          "type": "string"
        },
        "period_from": {
          "type": "string"
        },
        "period_to": {
          "type": "string"
        },
        "position": {
          "type": "string"
        },
        "stack": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "api.updateProfileRequest": {
      "type": "object",
      "properties": {
        "birth_date": {
          "type": "string"
        },
        "department": {
          "type": "string"
        },
        "effective_from": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "grade": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    }
  }
}
